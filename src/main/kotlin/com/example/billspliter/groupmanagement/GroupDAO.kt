package com.example.billspliter.groupmanagement

import com.amazonaws.services.dynamodbv2.datamodeling.*
import com.example.billspliter.usermanagement.Spend
import com.fasterxml.jackson.module.kotlin.jacksonObjectMapper
import com.fasterxml.jackson.module.kotlin.readValue
import org.springframework.data.annotation.CreatedDate
import java.sql.Date
import java.sql.Timestamp

@DynamoDBTable(tableName = "groups")
data class GroupDAO(
        @DynamoDBHashKey
        @DynamoDBAutoGeneratedKey
        var id: String? = null,
        @DynamoDBAttribute
        var name: String = "",
        @DynamoDBAttribute
        var imageURL: String = "",
        @DynamoDBTypeConverted(converter = UserDAOMapConverter::class)
        var members: MutableList<MemberHistory> = mutableListOf()

//        @DynamoDBTypeConverted(converter = UserDAOMapConverter::class)
//        var summary: Map<UserDAO, Double> = mapOf()
)

@DynamoDBDocument
data class MemberHistory(
        var userId: String = "",
        var spends: MutableList<SpendDAO> = mutableListOf()
)

@DynamoDBDocument
data class SpendDAO(
        val title: String,
        @DynamoDBAutoGeneratedTimestamp(strategy=DynamoDBAutoGenerateStrategy.ALWAYS)
        val date: Long = Timestamp(System.currentTimeMillis()).time,
        val value: Double,
        val imageURL: String,
        val userName: String,
        val concerns: List<String>
)


class UserDAOMapConverter : DynamoDBTypeConverter<String, MutableList<MemberHistory>> {

    private val objectMapper = jacksonObjectMapper()

    override fun unconvert(`object`: String): MutableList<MemberHistory> {
        return objectMapper.readValue(`object`)
    }

    override fun convert(`object`: MutableList<MemberHistory>): String = objectMapper.writeValueAsString(`object`)
}